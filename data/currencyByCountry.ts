import * as R from "ramda";

enum CurrencyCode {
  GBP = "GBP",
  EUR = "EUR",
  CAD = "CAD",
  AUD = "AUD",
  NZD = "NZD",
  USD = "USD",
}

type Country = string;

const countryCurrencies: Record<CurrencyCode, Country[]> = {
  [CurrencyCode.GBP]: ["GB"],
  [CurrencyCode.EUR]: [
    "AT",
    "BE",
    "FI",
    "FR",
    "DE",
    "GR",
    "IT",
    "LT",
    "NL",
    "PT",
    "SK",
    "SI",
    "ES",
  ],
  [CurrencyCode.CAD]: ["CA"],
  [CurrencyCode.AUD]: ["AU"],
  [CurrencyCode.NZD]: ["NZ"],
  [CurrencyCode.USD]: [
    "US",
    "CN",
    "IN",
    "UM",
    "ID",
    "PK",
    "BR",
    "NG",
    "BD",
    "RU",
    "MX",
    "JP",
    "ET",
    "PH",
    "EG",
    "TR",
    "IR",
    "TH",
    "TZ",
    "ZA",
    "MM",
    "KE",
    "CO",
    "UG",
    "AR",
    "DZ",
    "SD",
    "UA",
    "IQ",
    "AF",
    "PL",
    "MA",
    "SA",
    "UZ",
    "PE",
    "AO",
    "MY",
    "MZ",
    "GH",
    "YE",
    "NP",
    "VE",
    "MG",
    "CM",
    "CI",
    "NE",
    "TW",
    "LK",
    "BF",
    "ML",
    "RO",
    "MW",
    "CL",
    "KZ",
    "ZM",
    "GT",
    "EC",
    "SY",
    "SN",
    "KH",
    "TD",
    "SO",
    "ZW",
    "GN",
    "RW",
    "BJ",
    "BI",
    "TN",
    "BO",
    "HT",
    "CU",
    "SS",
    "DO",
    "JO",
    "AZ",
    "SE",
    "HN",
    "AE",
    "HU",
    "TJ",
    "BY",
    "PG",
    "RS",
    "IL",
    "CH",
    "TG",
    "SL",
    "HK",
    "PY",
    "BG",
    "LY",
    "LB",
    "NI",
    "KG",
    "SV",
    "TM",
    "SG",
    "DK",
    "CD",
    "NO",
    "OM",
    "CR",
    "LR",
    "GB",
    "CF",
    "MR",
    "PA",
    "KW",
    "HR",
    "MD",
    "GE",
    "ER",
    "UY",
    "BA",
    "MN",
    "AM",
    "JM",
    "QA",
    "AL",
    "PR",
    "NA",
    "GM",
    "BW",
    "GA",
    "LS",
    "MK",
    "GW",
  ],
};

const countries = R.flatten(R.values(countryCurrencies));

const currencyByCountry = R.pipe(
  // Transform {[CurrencyCode]: Country[]} into an array of [CurrencyCode, Country[]]
  // @ts-ignore
  R.toPairs,
  // Flip the array from [CurrencyCode, Country[]] to [Country, CurrencyCode]
  R.reduce((accum, [currency, countries]: [CurrencyCode, Country[]]) => {
    const countryCurrencyPairs = R.zip(
      countries,
      R.repeat(currency, R.length(countries))
    );
    return [...accum, ...countryCurrencyPairs];
  }, [] as [Country, CurrencyCode][]),
  // Go back to {[Country]: CurrencyCode} from [Country, CurrencyCode]
  R.fromPairs
  // @ts-ignore
)(countryCurrencies) as Record<Country, CurrencyCode>;

export { CurrencyCode, countries, currencyByCountry };
